#!/usr/bin/python

import glob
import re
from pathlib import Path


STORM_NAMES = [
  "SFileAuthenticateArchive",
  "SFileCloseArchive",
  "SFileCloseFile",
  "SFileDdaBegin",
  "SFileDdaBeginEx",
  "SFileDdaDestroy",
  "SFileDdaEnd",
  "SFileDdaGetPos",
  "SFileDdaGetVolume",
  "SFileDdaInitialize",
  "SFileDdaSetVolume",
  "SFileDestroy",
  "SFileEnableDirectAccess",
  "SFileGetFileArchive",
  "SFileGetFileSize",
  "SFileOpenArchive",
  "SFileOpenFile",
  "SFileOpenFileEx",
  "SFileReadFile",
  "SFileSetBasePath",
  "SFileSetFilePointer",
  "SFileSetLocale",
  "SFileGetBasePath",
  "SFileSetIoErrorMode",
  "SFileGetArchiveName",
  "SFileGetFileName",
  "SFileGetArchiveInfo",
  "SFileSetPlatform",
  "SFileLoadFile",
  "SFileUnloadFile",
  "SFileLoadFileEx",
  "SFilePrioritizeRequest",
  "SFileCancelRequest",
  "SFileSetAsyncBudget",
  "SFileSetDataChunkSize",
  "SFileEnableSeekOptimization",
  "SFileReadFileEx",
  "SFileFileExists",
  "SFileFileExistsEx",
  "SFileReadFileEx2",
  "SFileReadFile2",
  "SFileLoadFile2",
  "SFileOpenFileAsArchive",
  "SFileGetLocale",
  "SFileRegisterLoadNotifyProc",
  "SFileGetFileCompressedSize",
  "SFileAuthenticateArchiveEx",
  "SFileOpenPathAsArchive",
  "StormDestroy",
  "StormGetInstance",
  "StormGetOption",
  "StormSetOption",
  "SEvtDestroy",
  "SEvtDispatch",
  "SEvtRegisterHandler",
  "SEvtUnregisterHandler",
  "SEvtUnregisterType",
  "SEvtPopState",
  "SEvtPushState",
  "SEvtBreakHandlerChain",
  "SMemAlloc",
  "SMemDestroy",
  "SMemFree",
  "SMemGetSize",
  "SMemReAlloc",
  "SMemGetAllocated",
  "SMsgDestroy",
  "SMsgDispatchMessage",
  "SMsgDoMessageLoop",
  "SMsgRegisterCommand",
  "SMsgRegisterKeyDown",
  "SMsgRegisterKeyUp",
  "SMsgRegisterMessage",
  "SMsgPopRegisterState",
  "SMsgPushRegisterState",
  "SMsgRegisterSysCommand",
  "SErrDestroy",
  "SErrDisplayError",
  "SErrGetErrorStr",
  "SErrGetLastError",
  "SErrRegisterMessageSource",
  "SErrSetLastError",
  "SErrReportNamedResourceLeak",
  "SErrReportResourceLeak",
  "SErrSuppressErrors",
  "SErrRegisterHandler",
  "SErrUnregisterHandler",
  "SCmdGetBool",
  "SCmdGetNum",
  "SCmdGetString",
  "SCmdProcess",
  "SCmdRegisterArgList",
  "SCmdRegisterArgument",
  "SCmdCheckId",
  "SCmdProcessCommandLine",
  "SCmdStringExists",
  "SMemFindNextBlock",
  "SMemFindNextHeap",
  "SMemGetHeapByCaller",
  "SMemGetHeapByPtr",
  "SMemHeapAlloc",
  "SMemHeapCreate",
  "SMemHeapDestroy",
  "SMemHeapFree",
  "SMemHeapRealloc",
  "SMemHeapSize",
  "SMemCopy",
  "SMemFill",
  "SMemMove",
  "SMemZero",
  "SMemCmp",
  "SMemSetDebugFlags",
  "SMemDumpState",
  "SStrCopy",
  "SStrHash",
  "SStrPack",
  "SStrTokenize",
  "SStrChr",
  "SStrLen",
  "SStrDup",
  "SStrCmp",
  "SStrCmpI",
  "SStrUpper",
  "SMsgBreakHandlerChain",
  "SMsgUnregisterCommand",
  "SMsgUnregisterKeyDown",
  "SMsgUnregisterKeyUp",
  "SMsgUnregisterMessage",
  "SMsgGetDispatcher",
  "SMsgSetDefaultWindow",
  "SMsgGetDefaultWindow",
  "SMsgUnregisterSysCommand",
  "SRgnClear",
  "SRgnCombineRect",
  "SRgnCreate",
  "SRgnDelete",
  "SRgnDestroy",
  "SRgnDuplicate",
  "SRgnGetRectParams",
  "SRgnGetRects",
  "SRgnGetBoundingRect",
  "SRgnIsPointInRegion",
  "SRgnIsRectInRegion",
  "SRgnOffset",
  "SRgnCombineRectf",
  "SRgnGetRectParamsf",
  "SRgnGetRectsf",
  "SRgnGetBoundingRectf",
  "SRgnIsPointInRegionf",
  "SRgnIsRectInRegionf",
  "SRgnOffsetf",
  "SLogClose",
  "SLogCreate",
  "SLogSetTimestamp",
  "SLogDump",
  "SLogFlush",
  "SLogFlushAll",
  "SLogPend",
  "SLogWrite",
  "SLogSetAbsIndent",
  "SLogSetIndent",
  "SCompCompress",
  "SCompDecompress",
  "SLogVWrite",
  "SErrCheckDebugSymbolLibrary",
  "SErrDisplayErrorFmt",
  "SErrIsDisplayingError",
  "SErrPrepareAppFatal",
  "SErrSetLogTitleString",
  "SErrDisplayAppFatal",
  "SErrCatchUnhandledExceptions",
  "SErrSetLogCallback",
  "SStrChrF",
  "SStrChrR",
  "SStrToDouble",
  "SStrToFloat",
  "SStrToInt",
  "SStrToUnsigned",
  "SStrToInt64",
  "SStrPrintf",
  "SStrLower",
  "SStrHash64",
  "SStrVPrintf",
  "SStrStr",
  "SStrStrI",
  "SStrHashHT",
  "SBigAdd",
  "SBigAnd",
  "SBigCompare",
  "SBigCopy",
  "SBigDec",
  "SBigDel",
  "SBigDiv",
  "SBigFindPrime",
  "SBigFromBinary",
  "SBigFromStr",
  "SBigFromStream",
  "SBigFromUnsigned",
  "SBigGcd",
  "SBigInc",
  "SBigInvMod",
  "SBigIsEven",
  "SBigIsOdd",
  "SBigIsOne",
  "SBigIsPrime",
  "SBigIsZero",
  "SBigMod",
  "SBigMul",
  "SBigMulMod",
  "SBigNew",
  "SBigNot",
  "SBigOr",
  "SBigPow",
  "SBigPowMod",
  "SBigRand",
  "SBigSet2Exp",
  "SBigSetOne",
  "SBigSetZero",
  "SBigShl",
  "SBigShr",
  "SBigSquare",
  "SBigSub",
  "SBigToBinaryArray",
  "SBigToBinaryBuffer",
  "SBigToBinaryPtr",
  "SBigToStrArray",
  "SBigToStrBuffer",
  "SBigToStrPtr",
  "SBigToStreamArray",
  "SBigToStreamBuffer",
  "SBigToStreamPtr",
  "SBigToUnsigned",
  "SBigXor",
  "SUniConvertUTF16to8Len",
  "SUniConvertUTF16to8",
  "SUniConvertUTF8to16Len",
  "SUniConvertUTF8to16",
  "SUniSGetUTF8",
  "SUniSPutUTF8",
  "SUniFindAfterUTF8Chr",
  "SUniFindUTF8ChrStart",
  "SUniConvertUTF16ToWin",
  "SUniConvertUTF16ToMac",
  "SUniConvertUTF16ToDos",
  "SUniConvertWinToUTF16",
  "SUniConvertMacToUTF16",
  "SUniConvertDosToUTF16",
  "SUniConvertUTF8ToWin"
]

print("Script run")
for filepath in glob.iglob("./**/*", recursive=True):
  p = Path(filepath)
  if not p.is_file(): continue

  text = p.read_text()

  print(f"Replacing in {filepath}")
  for name in STORM_NAMES:
    text = re.sub(rf"\b{name}\b([^.])", rf"ImplWrap{name}\1", text)

  p.write_text(text)
